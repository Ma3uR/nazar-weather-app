// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è API
const WEATHER_API_KEY = '53688d3bf952f07624952c34d4576678'; // –ü–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π –∫–ª—é—á
const CITY = 'Cherkasy';
const COUNTRY = 'UA';

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–≥–æ–¥–∏
async function getCurrentWeather() {
    try {
        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${CITY},${COUNTRY}&units=metric&appid=${WEATHER_API_KEY}&lang=ua`);
        const data = await response.json();
        
        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏
        const tempElement = document.querySelector('.degrees');
        const feelsLikeElement = document.querySelector('.temperature p');
        const windElement = document.querySelector('.info-item:nth-child(1) span');
        const humidityElement = document.querySelector('.info-item:nth-child(2) span');
        const groundTempElement = document.querySelector('.info-item:nth-child(3) span');

        if (data.main) {
            tempElement.textContent = `${Math.round(data.main.temp)}¬∞C`;
            feelsLikeElement.textContent = `–í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫ ${Math.round(data.main.feels_like)}¬∞C`;
            windElement.textContent = `${Math.round(data.wind.speed)} –º/—Å`;
            humidityElement.textContent = `${data.main.humidity}%`;
            groundTempElement.textContent = `${Math.round(data.main.temp)}¬∞C`;
        }
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–≥–æ–¥–∏:', error);
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ–≥–Ω–æ–∑—É –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å
async function getWeeklyForecast() {
    try {
        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${CITY},${COUNTRY}&units=metric&appid=${WEATHER_API_KEY}&lang=ua`);
        const data = await response.json();
        
        if (data.list) {
            const dailyForecasts = {};
            const days = ['–ù–µ–¥—ñ–ª—è', '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä', '–ü\'—è—Ç–Ω–∏—Ü—è', '–°—É–±–æ—Ç–∞'];
            const today = new Date().getDay();
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö 5 –¥–Ω—ñ–≤ –∑–∞–º—ñ—Å—Ç—å 7
            const nextDays = [];
            for (let i = 0; i < 5; i++) {
                const dayIndex = (today + i) % 7;
                nextDays.push(days[dayIndex]);
            }
            
            // –ì—Ä—É–ø—É—î–º–æ –ø—Ä–æ–≥–Ω–æ–∑–∏ –ø–æ –¥–Ω—è—Ö
            data.list.forEach(forecast => {
                const date = new Date(forecast.dt * 1000);
                const dayName = days[date.getDay()];
                
                if (nextDays.includes(dayName)) {
                    if (!dailyForecasts[dayName]) {
                        dailyForecasts[dayName] = {
                            temp: forecast.main.temp,
                            count: 1,
                            weather: forecast.weather[0].icon,
                            description: forecast.weather[0].description
                        };
                    } else {
                        dailyForecasts[dayName].temp += forecast.main.temp;
                        dailyForecasts[dayName].count += 1;
                    }
                }
            });

            // –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
            const forecastContainer = document.querySelector('.forecast-days');
            forecastContainer.innerHTML = ''; // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

            // –î–æ–¥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ 5 –¥–Ω—ñ–≤ –ø—Ä–æ–≥–Ω–æ–∑—É
            nextDays.forEach((dayName) => {
                const forecast = dailyForecasts[dayName];
                if (forecast) {
                    const avgTemp = forecast.temp / forecast.count;
                    const dayElement = document.createElement('div');
                    dayElement.className = 'day';
                    dayElement.innerHTML = `
                        <p>${dayName}</p>
                        <i>${getWeatherEmoji(forecast.weather)}</i>
                        <span>${Math.round(avgTemp)}¬∞C</span>
                    `;
                    forecastContainer.appendChild(dayElement);
                }
            });
        }
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ–≥–Ω–æ–∑—É –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å:', error);
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –∫–æ–¥—É –ø–æ–≥–æ–¥–∏ –≤ –µ–º–æ–¥–∑—ñ
function getWeatherEmoji(iconCode) {
    const weatherIcons = {
        '01d': '‚òÄÔ∏è', // —è—Å–Ω–æ (–¥–µ–Ω—å)
        '01n': 'üåô', // —è—Å–Ω–æ (–Ω—ñ—á)
        '02d': 'üå§Ô∏è', // –º–∞–ª–æ—Ö–º–∞—Ä–Ω–æ (–¥–µ–Ω—å)
        '02n': '‚òÅÔ∏è', // –º–∞–ª–æ—Ö–º–∞—Ä–Ω–æ (–Ω—ñ—á)
        '03d': '‚òÅÔ∏è', // —Ö–º–∞—Ä–Ω–æ
        '03n': '‚òÅÔ∏è',
        '04d': '‚òÅÔ∏è', // –ø–æ—Ö–º—É—Ä–æ
        '04n': '‚òÅÔ∏è',
        '09d': 'üåßÔ∏è', // –¥–æ—â
        '09n': 'üåßÔ∏è',
        '10d': 'üå¶Ô∏è', // –¥–æ—â –∑ –ø—Ä–æ—è—Å–Ω–µ–Ω–Ω—è–º–∏
        '10n': 'üåßÔ∏è',
        '11d': '‚õàÔ∏è', // –≥—Ä–æ–∑–∞
        '11n': '‚õàÔ∏è',
        '13d': 'üå®Ô∏è', // —Å–Ω—ñ–≥
        '13n': 'üå®Ô∏è',
        '50d': 'üå´Ô∏è', // —Ç—É–º–∞–Ω
        '50n': 'üå´Ô∏è'
    };
    return weatherIcons[iconCode] || 'üå°Ô∏è';
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–≥–æ–¥–∏ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ç–∞ –∫–æ–∂–Ω—ñ 30 —Ö–≤–∏–ª–∏–Ω
window.addEventListener('load', () => {
    getCurrentWeather();
    getWeeklyForecast();
    
    setInterval(() => {
        getCurrentWeather();
        getWeeklyForecast();
    }, 1800000);
});

// –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ñ–µ—Ç—ñ
function createConfetti() {
    const container = document.createElement('div');
    container.className = 'confetti-container active';
    document.body.appendChild(container);

    const emojis = ['üéâ', 'üéä', '‚ú®', '‚≠ê', 'üåü'];
    const colors = ['#FFD700', '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4'];

    // –°—Ç–≤–æ—Ä—é—î–º–æ 50 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∫–æ–Ω—Ñ–µ—Ç—ñ
    for (let i = 0; i < 50; i++) {
        const confetti = document.createElement('div');
        confetti.className = 'confetti';
        confetti.style.left = Math.random() * 100 + 'vw';
        confetti.style.animationDelay = Math.random() * 2 + 's';
        confetti.style.fontSize = Math.random() * 20 + 20 + 'px';
        
        // –í–∏–ø–∞–¥–∫–æ–≤–æ –æ–±–∏—Ä–∞—î–º–æ –µ–º–æ–¥–∑—ñ –∞–±–æ –∫–æ–ª—å–æ—Ä–æ–≤–∏–π –∫–≤–∞–¥—Ä–∞—Ç
        if (Math.random() > 0.5) {
            confetti.textContent = emojis[Math.floor(Math.random() * emojis.length)];
        } else {
            confetti.style.width = '10px';
            confetti.style.height = '10px';
            confetti.style.background = colors[Math.floor(Math.random() * colors.length)];
            confetti.style.transform = 'rotate(' + (Math.random() * 360) + 'deg)';
        }

        container.appendChild(confetti);
    }

    // –í–∏–¥–∞–ª—è—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
    setTimeout(() => {
        container.remove();
    }, 5000);
}

// –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑—ñ—Ä–æ–∫
document.addEventListener('DOMContentLoaded', () => {
    const stars = document.querySelectorAll('.stars input');
    stars.forEach(star => {
        star.addEventListener('change', (e) => {
            if (e.target.value === '5') {
                createConfetti();
            }
        });
    });
}); 